version: '2.2'

networks:
  basic:

services:
  <%= rootOrg.ca.fullName %>:
    container_name: <%= rootOrg.ca.fullName %>
    image: hyperledger/fabric-ca:${FABRIC_CA_VERSION}
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=<%= rootOrg.ca.fullName %>
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server/crypto/ca.<%= rootOrg.domain %>-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server/crypto/priv-key.pem
    ports:
      - 7030:7054
    working_dir: /etc/hyperledger/fabric-ca-server
    command: sh -c 'fabric-ca-server start -b ${ROOT_CA_ADMIN_NAME}:${ROOT_CA_ADMIN_PASSWORD} -d'
    volumes:
      - ../fabric-config/crypto-config/ordererOrganizations/<%= rootOrg.domain %>/ca/:/etc/hyperledger/fabric-ca-server/crypto
    networks:
      - basic
    <% for (ordererNo in rootOrg.orderers) {
      var orderer=rootOrg.orderers[ordererNo]
      var ordererHostPort=7040+parseInt(ordererNo,10)
    %>

  <%= orderer.address %>:
    container_name: <%= orderer.address %>
    image: hyperledger/fabric-orderer:${FABRIC_VERSION}
    environment:
      - ORDERER_GENERAL_LOGLEVEL=${LOGGING_LEVEL}
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/config/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=<%= rootOrg.mspName %>
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      - GODEBUG=netdns=go<% if(networkSettings.tls) { %>
      # enabled TLS
      - ORDERER_GENERAL_TLS_ENABLED=true
      - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
      - ORDERER_GENERAL_CLUSTER_CLIENTCERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      - ORDERER_GENERAL_CLUSTER_CLIENTPRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      - ORDERER_GENERAL_CLUSTER_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]<% } %>
    working_dir: /var/hyperledger/orderer
    command: orderer
    ports:
      - <%= ordererHostPort %>:7050
    volumes:
      - ../fabric-config/config/:/var/hyperledger/config
      - ../fabric-config/crypto-config/ordererOrganizations/<%= orderer.domain %>/orderers/<%= orderer.address %>/msp/:/var/hyperledger/orderer/msp
      - ../fabric-config/crypto-config/ordererOrganizations/<%= orderer.domain %>/orderers/<%= orderer.address %>/tls/:/var/hyperledger/orderer/tls
    networks:
      - basic<% } %>

  <% for (orgNo in orgs) {
    var org = orgs[orgNo]
    var caHostPort=7031+parseInt(orgNo,10)
  %>

  <%= org.ca.fullName %>:
    container_name: <%= org.ca.fullName %>
    image: hyperledger/fabric-ca:${FABRIC_CA_VERSION}
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=<%= org.ca.fullName %>
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server/crypto/ca.<%= org.domain %>-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server/crypto/priv-key.pem
    ports:
      - <%= caHostPort %>:7054
    working_dir: /etc/hyperledger/fabric-ca-server
    command: sh -c 'fabric-ca-server start -b ${<%= org.ca.caAdminNameVar %>}:${<%= org.ca.caAdminPassVar %>} -d'
    volumes:
      - ../fabric-config/crypto-config/peerOrganizations/<%= org.domain %>/ca/:/etc/hyperledger/fabric-ca-server/crypto
    networks:
      - basic

  cli.<%= org.domain %>:
    container_name: cli.<%= org.domain %>
    image: hyperledger/fabric-tools:${FABRIC_VERSION}
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=${LOGGING_LEVEL}
      - CORE_PEER_ID=cli.<%= org.domain %>
      - CORE_CHAINCODE_KEEPALIVE=10
      #
      - CORE_PEER_LOCALMSPID=<%= org.mspName %>
      - CORE_PEER_MSPCONFIGPATH=/var/hyperledger/cli/crypto/users/Admin@<%= org.domain %>/msp
      - CORE_PEER_ADDRESS=peer0.<%= org.domain %>:7051<% if(networkSettings.tls) { %>
      # enabled TLS
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/var/hyperledger/cli/crypto/users/Admin@<%= org.domain %>/tls/client.crt
      - CORE_PEER_TLS_KEY_FILE=/var/hyperledger/cli/crypto/users/Admin@<%= org.domain %>/tls/client.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/var/hyperledger/cli/crypto/users/Admin@<%= org.domain %>/tls/ca.crt
      - TLS_CA_CERT_PATH=/var/hyperledger/cli/crypto/daTls/msp/tlscacerts/tlsca.<%= rootOrg.domain %>-cert.pem<% } %>
    working_dir: /var/hyperledger/cli/
    command: /bin/bash
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ../fabric-docker/scripts/cli:/var/hyperledger/cli/scripts/
      - ../fabric-config/crypto-config/peerOrganizations/<%= org.domain %>:/var/hyperledger/cli/crypto/
      - ../fabric-config/config:/var/hyperledger/cli/config/ # genesis.block and channel.tx's
      - ../fabric-config/crypto-config/ordererOrganizations/<%= rootOrg.domain %>/orderers/<%= rootOrg.ordererHead.address %>/:/var/hyperledger/cli/crypto/daTls # TODO ! To ease up deployment, not proper.<% chaincodes.forEach(function(chaincode) { %>
      - "$CHAINCODES_BASE_DIR/<%= chaincode.directory %>/:/var/hyperledger/cli/<%= chaincode.name %>/"<% }) %>
    networks:
      - basic

  <% for(var peerNo=0; peerNo<org.peersCount; peerNo++) {
    var peer=org.peers[peerNo]
    var peerHostPort=7051+orgNo*10+peerNo
    var peerDbHostPort=5980+orgNo*10+peerNo
  %>

  <%= peer.address %>:
    container_name: <%= peer.address %>
    image: hyperledger/fabric-peer:${FABRIC_VERSION}
    environment:
      - CORE_PEER_LOCALMSPID=<%= org.mspName %>
      - CORE_PEER_ID=<%= peer.address %>
      - CORE_PEER_ADDRESS=<%= peer.address %>:7051
      - CORE_PEER_LISTENADDRESS=<%= peer.address %>:7051
      - CORE_PEER_CHAINCODELISTENADDRESS=<%= peer.address %>:7050
      - CORE_PEER_GOSSIP_ENDPOINT=<%= peer.address %>:7051<% if(peer.isAnchorPeer) { %>
      - CORE_PEER_GOSSIP_EXTERNALENDPOINT=<%= peer.address %>:7051<% } %>
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/peer/msp
      - CORE_CHAINCODE_BUILDER=hyperledger/fabric-ccenv:${FABRIC_VERSION}
      #
      - CORE_LOGGING_PEER=${LOGGING_LEVEL}
      - CORE_CHAINCODE_LOGGING_LEVEL=${LOGGING_LEVEL}
      - FABRIC_LOGGING_SPEC=${LOGGING_LEVEL}
      #
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_basic
      - CORE_VM_DOCKER_ATTACHSTDOUT=true
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - GODEBUG=netdns=go
      <% if(networkSettings.tls) { %>
      # enabled TLS
      - CORE_PEER_TLS_ENABLED=true
      - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/peer/tls/server.crt
      - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/peer/tls/server.key
      - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/peer/tls/ca.crt
      <% } %>
      <% if(peer.db==="CouchDb") { %>
      # CouchDB
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=<%= peer.name %>.couchdb.<%= org.domain %>:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=<%= peer.name %>
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=<%= peer.name %>Password
      <% } %>
    working_dir: /etc/hyperledger/fabric/peer/
    command: peer node start
    ports:
      - <%= peerHostPort %>:7051
      # - 7053:7053
    volumes:
      - /var/run/docker.sock:/host/var/run/docker.sock
      - ../fabric-config/crypto-config/peerOrganizations/<%= org.domain %>/peers/<%= peer.address %>/msp:/etc/hyperledger/fabric/peer/msp
      - ../fabric-config/crypto-config/peerOrganizations/<%= org.domain %>/peers/<%= peer.address %>/tls:/etc/hyperledger/fabric/peer/tls
      - ../fabric-config/crypto-config/peerOrganizations/<%= org.domain %>/users:/etc/hyperledger/fabric/peer/msp/users
      - ../fabric-config/config:/etc/hyperledger/fabric/config
    depends_on:
      - <%= rootOrg.ordererHead.address %>
    networks:
      - basic
<% if(peer.db==="CouchDb") { %>
  <%= peer.name %>.couchdb.<%= org.domain %>:
    container_name: <%= peer.name %>.couchdb.<%= org.domain %>
    image: hyperledger/fabric-couchdb:0.4.18
    environment:
      - COUCHDB_USER=<%= peer.name %>
      - COUCHDB_PASSWORD=<%= peer.name %>Password
    ports:
      - <%= peerDbHostPort %>:5984
    networks:
      - basic
<% } %>
<% }} %>
