version: '2'

networks:
  basic:

services:

  orderer.example.com:
    container_name: orderer.example.com
    image: hyperledger/fabric-orderer:${FABRIC_VERSION}
    environment:
      - ORDERER_GENERAL_LOGLEVEL=${LOGGING_LEVEL}
      - ORDERER_GENERAL_LISTENADDRESS=0.0.0.0
      - ORDERER_GENERAL_GENESISMETHOD=file
      - ORDERER_GENERAL_GENESISFILE=/var/hyperledger/config/genesis.block
      - ORDERER_GENERAL_LOCALMSPID=OrdererMSP
      - ORDERER_GENERAL_LOCALMSPDIR=/var/hyperledger/orderer/msp
      - GODEBUG=netdns=go
      # enabled TLS
      # - ORDERER_GENERAL_TLS_ENABLED=false
      # - ORDERER_GENERAL_TLS_PRIVATEKEY=/var/hyperledger/orderer/tls/server.key
      # - ORDERER_GENERAL_TLS_CERTIFICATE=/var/hyperledger/orderer/tls/server.crt
      # - ORDERER_GENERAL_TLS_ROOTCAS=[/var/hyperledger/orderer/tls/ca.crt]
    working_dir: /var/hyperledger/orderer
    command: orderer
    ports:
      - 7050:7050
    volumes:
      - ../fabric-config/config/:/var/hyperledger/config
      - ../fabric-config/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/msp/:/var/hyperledger/orderer/msp
      - ../fabric-config/crypto-config/ordererOrganizations/example.com/orderers/orderer.example.com/tls/:/var/hyperledger/orderer/tls
    networks:
      - basic

  peer0.org1.com:
    container_name: peer0.org1.com
    image: hyperledger/fabric-peer:${FABRIC_VERSION}
    environment:
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - CORE_PEER_ID=peer0.org1.com
      - CORE_LOGGING_PEER=${LOGGING_LEVEL}
      - CORE_CHAINCODE_LOGGING_LEVEL=${LOGGING_LEVEL}
      - CORE_VM_DOCKER_HOSTCONFIG_NETWORKMODE=${COMPOSE_PROJECT_NAME}_basic
      - CORE_VM_DOCKER_ATTACHSTDOUT=true
      - GODEBUG=netdns=go
      #
      - CORE_PEER_MSPCONFIGPATH=/etc/hyperledger/fabric/peer/msp
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_ADDRESS=peer0.org1.com:7051
      # enabled TLS
      # - CORE_PEER_TLS_ENABLED=true
      # - CORE_PEER_TLS_CERT_FILE=/etc/hyperledger/fabric/peer/tls/server.crt
      # - CORE_PEER_TLS_KEY_FILE=/etc/hyperledger/fabric/peer/tls/server.key
      # - CORE_PEER_TLS_ROOTCERT_FILE=/etc/hyperledger/fabric/peer/tls/ca.crt
      # CouchDB
      - CORE_LEDGER_STATE_STATEDATABASE=CouchDB
      - CORE_LEDGER_STATE_COUCHDBCONFIG_COUCHDBADDRESS=peer0.couchdb.org1.com:5984
      - CORE_LEDGER_STATE_COUCHDBCONFIG_USERNAME=peer
      - CORE_LEDGER_STATE_COUCHDBCONFIG_PASSWORD=very-stong-pass
    working_dir: /etc/hyperledger/fabric/peer/
    command: peer node start
    ports:
      - 7051:7051
      - 7053:7053
    volumes:
      - /var/run/:/host/var/run/
      - ../fabric-config/crypto-config/peerOrganizations/org1.com/peers/peer0.org1.com/msp:/etc/hyperledger/fabric/peer/msp
      - ../fabric-config/crypto-config/peerOrganizations/org1.com/peers/peer0.org1.com/tls:/etc/hyperledger/fabric/peer/tls
      - ../fabric-config/crypto-config/peerOrganizations/org1.com/users:/etc/hyperledger/fabric/peer/msp/users
      - ../fabric-config/config:/etc/hyperledger/fabric/config
    depends_on:
      - orderer.example.com
    networks:
      - basic

  peer0.couchdb.org1.com:
    container_name: peer0.couchdb.org1.com
    image: hyperledger/fabric-couchdb:0.4.18
    environment:
      - COUCHDB_USER=peer
      - COUCHDB_PASSWORD=very-stong-pass
    # Comment/Uncomment the port mapping if you want to hide/expose the CouchDB service,
    # for example map it to utilize Fauxton User Interface in dev environments.
    ports:
      - "5984:5984"
    networks:
      - basic

  ca.example.com:
    container_name: ca.example.com
    image: hyperledger/fabric-ca:${FABRIC_VERSION}
    environment:
      - FABRIC_CA_HOME=/etc/hyperledger/fabric-ca-server
      - FABRIC_CA_SERVER_CA_NAME=ca.example.com
      - FABRIC_CA_SERVER_CA_CERTFILE=/etc/hyperledger/fabric-ca-server-config/ca.example.com-cert.pem
      - FABRIC_CA_SERVER_CA_KEYFILE=/etc/hyperledger/fabric-ca-server-config/key.pem
    ports:
      - 7054:7054
    command: sh -c 'fabric-ca-server start -b admin:adminpw -d'
    volumes:
      - ../fabric-config/crypto-config/ordererOrganizations/example.com/ca/:/etc/hyperledger/fabric-ca-server-config
    networks:
      - basic

  cli:
    container_name: cli
    image: hyperledger/fabric-tools:${FABRIC_VERSION}
    tty: true
    environment:
      - GOPATH=/opt/gopath
      - CORE_VM_ENDPOINT=unix:///host/var/run/docker.sock
      - FABRIC_LOGGING_SPEC=${LOGGING_LEVEL}
      - CORE_PEER_ID=cli
      - CORE_CHAINCODE_KEEPALIVE=10
      #
      - CORE_PEER_LOCALMSPID=Org1MSP
      - CORE_PEER_MSPCONFIGPATH=/var/hyperledger/cli/crypto/peerOrganizations/org1.com/users/Admin@org1.com/msp
      - CORE_PEER_ADDRESS=peer0.org1.com:7051
#      - ORDERER_URL=orderer.example.com:7050
      # enabled TLS
      # - CORE_PEER_TLS_ENABLED=true
      # - CORE_PEER_TLS_CERT_FILE=/var/hyperledger/cli/crypto/peerOrganizations/org1.com/users/Admin@org1.com/tls/client.crt
      # - CORE_PEER_TLS_KEY_FILE=/var/hyperledger/cli/crypto/peerOrganizations/org1.com/users/Admin@org1.com/tls/client.key
      # - CORE_PEER_TLS_ROOTCERT_FILE=/var/hyperledger/cli/crypto/peerOrganizations/org1.com/users/Admin@org1.com/tls/ca.crt
      # - TLS_CA_CERT_PATH=/var/hyperledger/cli/crypto/ordererOrganizations/example.com/orderers/orderer.example.com/msp/tlscacerts/tlsca.example.com-cert.pem
    working_dir: /var/hyperledger/cli/
    command: /bin/bash
    volumes:
      - /var/run/:/host/var/run/
      - ../fabric-config/crypto-config:/var/hyperledger/cli/crypto/ # all certs TODO should be done per organization...
      - ../fabric-config/config:/var/hyperledger/cli/config/ # genesis.block and channel.tx's
      - ./scripts/cli:/var/hyperledger/cli/scripts/
      # - ../chaincode/:/var/hyperledger/cli/chaincode/
    networks:
      - basic
